/*******************************************************************************
 * Copyright 2011 See AUTHORS file.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/



plugins {
    id 'java'
    id 'jacoco'
    id "com.vanniktech.android.junit.jacoco" version "0.15.0"
    id 'info.solidsoft.pitest' version '1.4.6'
}


apply from: "gradle/dependencies.gradle"



allprojects {
    group = 'com.badlogicgames.gdx'
    version = '1.9.9-SNAPSHOT'

    buildscript {
        repositories {
            google()
            jcenter()
            mavenCentral()
            maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        }
        
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
}

dependencies {
    testCompile "junit:junit:4.+"
    testCompile 'org.mockito:mockito-core:2.7.22'
    testImplementation 'org.mockito:mockito-core:2.7.22'
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false
    }
}



configure(subprojects - project(":tests:gdx-tests-android")) {
    apply plugin: "idea"
    apply plugin: "java"

    compileJava {
        options.fork = true
        options.incremental = true
    }
}

ant.importBuild("fetch.xml") { antTargetName ->
    "ant-task-" + antTargetName    
}
task fetchNatives(dependsOn: "ant-task-all"){
    doLast {
    }
}

